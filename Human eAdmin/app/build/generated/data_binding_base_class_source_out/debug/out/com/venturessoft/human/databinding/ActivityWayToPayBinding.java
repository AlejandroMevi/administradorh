// Generated by view binder compiler. Do not edit!
package com.venturessoft.human.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.divider.MaterialDivider;
import com.google.android.material.textview.MaterialTextView;
import com.venturessoft.human.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityWayToPayBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnBackHome;

  @NonNull
  public final TextView btnChange;

  @NonNull
  public final CardView cardView2;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final CardView cvDetails;

  @NonNull
  public final TextView employesNumber;

  @NonNull
  public final TextView finalPrice;

  @NonNull
  public final LayoutHelpBinding idHelpOptions;

  @NonNull
  public final LinearLayout linearCheck;

  @NonNull
  public final LinearLayout linearLoadingAnimationPay;

  @NonNull
  public final ViewLoadingNewBinding loadingAnimationWayToPay;

  @NonNull
  public final MaterialDivider materialDivider;

  @NonNull
  public final TextView nextDate;

  @NonNull
  public final Button payButton;

  @NonNull
  public final TextView price;

  @NonNull
  public final TextView text3;

  @NonNull
  public final TextView text4;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final MaterialTextView title;

  private ActivityWayToPayBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnBackHome,
      @NonNull TextView btnChange, @NonNull CardView cardView2,
      @NonNull ConstraintLayout constraintLayout, @NonNull CardView cvDetails,
      @NonNull TextView employesNumber, @NonNull TextView finalPrice,
      @NonNull LayoutHelpBinding idHelpOptions, @NonNull LinearLayout linearCheck,
      @NonNull LinearLayout linearLoadingAnimationPay,
      @NonNull ViewLoadingNewBinding loadingAnimationWayToPay,
      @NonNull MaterialDivider materialDivider, @NonNull TextView nextDate,
      @NonNull Button payButton, @NonNull TextView price, @NonNull TextView text3,
      @NonNull TextView text4, @NonNull TextView textView2, @NonNull TextView textView3,
      @NonNull MaterialTextView title) {
    this.rootView = rootView;
    this.btnBackHome = btnBackHome;
    this.btnChange = btnChange;
    this.cardView2 = cardView2;
    this.constraintLayout = constraintLayout;
    this.cvDetails = cvDetails;
    this.employesNumber = employesNumber;
    this.finalPrice = finalPrice;
    this.idHelpOptions = idHelpOptions;
    this.linearCheck = linearCheck;
    this.linearLoadingAnimationPay = linearLoadingAnimationPay;
    this.loadingAnimationWayToPay = loadingAnimationWayToPay;
    this.materialDivider = materialDivider;
    this.nextDate = nextDate;
    this.payButton = payButton;
    this.price = price;
    this.text3 = text3;
    this.text4 = text4;
    this.textView2 = textView2;
    this.textView3 = textView3;
    this.title = title;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWayToPayBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWayToPayBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_way_to_pay, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWayToPayBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBackHome;
      Button btnBackHome = ViewBindings.findChildViewById(rootView, id);
      if (btnBackHome == null) {
        break missingId;
      }

      id = R.id.btnChange;
      TextView btnChange = ViewBindings.findChildViewById(rootView, id);
      if (btnChange == null) {
        break missingId;
      }

      id = R.id.cardView2;
      CardView cardView2 = ViewBindings.findChildViewById(rootView, id);
      if (cardView2 == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.cvDetails;
      CardView cvDetails = ViewBindings.findChildViewById(rootView, id);
      if (cvDetails == null) {
        break missingId;
      }

      id = R.id.employesNumber;
      TextView employesNumber = ViewBindings.findChildViewById(rootView, id);
      if (employesNumber == null) {
        break missingId;
      }

      id = R.id.finalPrice;
      TextView finalPrice = ViewBindings.findChildViewById(rootView, id);
      if (finalPrice == null) {
        break missingId;
      }

      id = R.id.id_help_options;
      View idHelpOptions = ViewBindings.findChildViewById(rootView, id);
      if (idHelpOptions == null) {
        break missingId;
      }
      LayoutHelpBinding binding_idHelpOptions = LayoutHelpBinding.bind(idHelpOptions);

      id = R.id.linearCheck;
      LinearLayout linearCheck = ViewBindings.findChildViewById(rootView, id);
      if (linearCheck == null) {
        break missingId;
      }

      id = R.id.linearLoadingAnimationPay;
      LinearLayout linearLoadingAnimationPay = ViewBindings.findChildViewById(rootView, id);
      if (linearLoadingAnimationPay == null) {
        break missingId;
      }

      id = R.id.loadingAnimationWayToPay;
      View loadingAnimationWayToPay = ViewBindings.findChildViewById(rootView, id);
      if (loadingAnimationWayToPay == null) {
        break missingId;
      }
      ViewLoadingNewBinding binding_loadingAnimationWayToPay = ViewLoadingNewBinding.bind(loadingAnimationWayToPay);

      id = R.id.materialDivider;
      MaterialDivider materialDivider = ViewBindings.findChildViewById(rootView, id);
      if (materialDivider == null) {
        break missingId;
      }

      id = R.id.nextDate;
      TextView nextDate = ViewBindings.findChildViewById(rootView, id);
      if (nextDate == null) {
        break missingId;
      }

      id = R.id.payButton;
      Button payButton = ViewBindings.findChildViewById(rootView, id);
      if (payButton == null) {
        break missingId;
      }

      id = R.id.price;
      TextView price = ViewBindings.findChildViewById(rootView, id);
      if (price == null) {
        break missingId;
      }

      id = R.id.text3;
      TextView text3 = ViewBindings.findChildViewById(rootView, id);
      if (text3 == null) {
        break missingId;
      }

      id = R.id.text4;
      TextView text4 = ViewBindings.findChildViewById(rootView, id);
      if (text4 == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.title;
      MaterialTextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new ActivityWayToPayBinding((ConstraintLayout) rootView, btnBackHome, btnChange,
          cardView2, constraintLayout, cvDetails, employesNumber, finalPrice, binding_idHelpOptions,
          linearCheck, linearLoadingAnimationPay, binding_loadingAnimationWayToPay, materialDivider,
          nextDate, payButton, price, text3, text4, textView2, textView3, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
