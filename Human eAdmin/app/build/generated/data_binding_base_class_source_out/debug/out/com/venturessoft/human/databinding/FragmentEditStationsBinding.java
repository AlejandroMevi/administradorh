// Generated by view binder compiler. Do not edit!
package com.venturessoft.human.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.materialswitch.MaterialSwitch;
import com.google.android.material.textfield.MaterialAutoCompleteTextView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.google.android.material.textview.MaterialTextView;
import com.venturessoft.human.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentEditStationsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputEditText bssiddEdit;

  @NonNull
  public final MaterialButton btnBackListEstaciones;

  @NonNull
  public final MaterialButton btnGuardarEstacionesEdit;

  @NonNull
  public final EditText editsearchEditext;

  @NonNull
  public final LinearLayout frameMapsEdit;

  @NonNull
  public final TextInputEditText latEdit;

  @NonNull
  public final TextInputLayout linearCompany;

  @NonNull
  public final ViewLoadingNewBinding loadingAnimationEditStation;

  @NonNull
  public final TextInputEditText lonEdit;

  @NonNull
  public final TextInputEditText nameEstationEdit;

  @NonNull
  public final TextInputEditText rangoEdit;

  @NonNull
  public final NestedScrollView scrollEditStation;

  @NonNull
  public final MaterialAutoCompleteTextView selectEstacionesEdit;

  @NonNull
  public final MaterialAutoCompleteTextView selectTypeEdit;

  @NonNull
  public final MaterialSwitch statusFreeStation;

  @NonNull
  public final TextInputLayout textnameEstationEdit;

  @NonNull
  public final MaterialTextView txtFreeStatio;

  @NonNull
  public final TextInputLayout txtbssiddEdit;

  @NonNull
  public final TextInputLayout txtlatEdit;

  @NonNull
  public final TextInputLayout txtlonEdit;

  @NonNull
  public final TextInputLayout txtrangoEdit;

  @NonNull
  public final TextInputLayout txtselectTypeEdit;

  @NonNull
  public final TextInputLayout txtuuidEdit;

  @NonNull
  public final TextInputEditText uuidEdit;

  private FragmentEditStationsBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputEditText bssiddEdit, @NonNull MaterialButton btnBackListEstaciones,
      @NonNull MaterialButton btnGuardarEstacionesEdit, @NonNull EditText editsearchEditext,
      @NonNull LinearLayout frameMapsEdit, @NonNull TextInputEditText latEdit,
      @NonNull TextInputLayout linearCompany,
      @NonNull ViewLoadingNewBinding loadingAnimationEditStation,
      @NonNull TextInputEditText lonEdit, @NonNull TextInputEditText nameEstationEdit,
      @NonNull TextInputEditText rangoEdit, @NonNull NestedScrollView scrollEditStation,
      @NonNull MaterialAutoCompleteTextView selectEstacionesEdit,
      @NonNull MaterialAutoCompleteTextView selectTypeEdit,
      @NonNull MaterialSwitch statusFreeStation, @NonNull TextInputLayout textnameEstationEdit,
      @NonNull MaterialTextView txtFreeStatio, @NonNull TextInputLayout txtbssiddEdit,
      @NonNull TextInputLayout txtlatEdit, @NonNull TextInputLayout txtlonEdit,
      @NonNull TextInputLayout txtrangoEdit, @NonNull TextInputLayout txtselectTypeEdit,
      @NonNull TextInputLayout txtuuidEdit, @NonNull TextInputEditText uuidEdit) {
    this.rootView = rootView;
    this.bssiddEdit = bssiddEdit;
    this.btnBackListEstaciones = btnBackListEstaciones;
    this.btnGuardarEstacionesEdit = btnGuardarEstacionesEdit;
    this.editsearchEditext = editsearchEditext;
    this.frameMapsEdit = frameMapsEdit;
    this.latEdit = latEdit;
    this.linearCompany = linearCompany;
    this.loadingAnimationEditStation = loadingAnimationEditStation;
    this.lonEdit = lonEdit;
    this.nameEstationEdit = nameEstationEdit;
    this.rangoEdit = rangoEdit;
    this.scrollEditStation = scrollEditStation;
    this.selectEstacionesEdit = selectEstacionesEdit;
    this.selectTypeEdit = selectTypeEdit;
    this.statusFreeStation = statusFreeStation;
    this.textnameEstationEdit = textnameEstationEdit;
    this.txtFreeStatio = txtFreeStatio;
    this.txtbssiddEdit = txtbssiddEdit;
    this.txtlatEdit = txtlatEdit;
    this.txtlonEdit = txtlonEdit;
    this.txtrangoEdit = txtrangoEdit;
    this.txtselectTypeEdit = txtselectTypeEdit;
    this.txtuuidEdit = txtuuidEdit;
    this.uuidEdit = uuidEdit;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentEditStationsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentEditStationsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_edit_stations, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentEditStationsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bssiddEdit;
      TextInputEditText bssiddEdit = ViewBindings.findChildViewById(rootView, id);
      if (bssiddEdit == null) {
        break missingId;
      }

      id = R.id.btnBackListEstaciones;
      MaterialButton btnBackListEstaciones = ViewBindings.findChildViewById(rootView, id);
      if (btnBackListEstaciones == null) {
        break missingId;
      }

      id = R.id.btnGuardarEstacionesEdit;
      MaterialButton btnGuardarEstacionesEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnGuardarEstacionesEdit == null) {
        break missingId;
      }

      id = R.id.editsearchEditext;
      EditText editsearchEditext = ViewBindings.findChildViewById(rootView, id);
      if (editsearchEditext == null) {
        break missingId;
      }

      id = R.id.frameMapsEdit;
      LinearLayout frameMapsEdit = ViewBindings.findChildViewById(rootView, id);
      if (frameMapsEdit == null) {
        break missingId;
      }

      id = R.id.latEdit;
      TextInputEditText latEdit = ViewBindings.findChildViewById(rootView, id);
      if (latEdit == null) {
        break missingId;
      }

      id = R.id.linearCompany;
      TextInputLayout linearCompany = ViewBindings.findChildViewById(rootView, id);
      if (linearCompany == null) {
        break missingId;
      }

      id = R.id.loadingAnimationEditStation;
      View loadingAnimationEditStation = ViewBindings.findChildViewById(rootView, id);
      if (loadingAnimationEditStation == null) {
        break missingId;
      }
      ViewLoadingNewBinding binding_loadingAnimationEditStation = ViewLoadingNewBinding.bind(loadingAnimationEditStation);

      id = R.id.lonEdit;
      TextInputEditText lonEdit = ViewBindings.findChildViewById(rootView, id);
      if (lonEdit == null) {
        break missingId;
      }

      id = R.id.nameEstationEdit;
      TextInputEditText nameEstationEdit = ViewBindings.findChildViewById(rootView, id);
      if (nameEstationEdit == null) {
        break missingId;
      }

      id = R.id.rangoEdit;
      TextInputEditText rangoEdit = ViewBindings.findChildViewById(rootView, id);
      if (rangoEdit == null) {
        break missingId;
      }

      id = R.id.scrollEditStation;
      NestedScrollView scrollEditStation = ViewBindings.findChildViewById(rootView, id);
      if (scrollEditStation == null) {
        break missingId;
      }

      id = R.id.selectEstacionesEdit;
      MaterialAutoCompleteTextView selectEstacionesEdit = ViewBindings.findChildViewById(rootView, id);
      if (selectEstacionesEdit == null) {
        break missingId;
      }

      id = R.id.selectTypeEdit;
      MaterialAutoCompleteTextView selectTypeEdit = ViewBindings.findChildViewById(rootView, id);
      if (selectTypeEdit == null) {
        break missingId;
      }

      id = R.id.statusFreeStation;
      MaterialSwitch statusFreeStation = ViewBindings.findChildViewById(rootView, id);
      if (statusFreeStation == null) {
        break missingId;
      }

      id = R.id.textnameEstationEdit;
      TextInputLayout textnameEstationEdit = ViewBindings.findChildViewById(rootView, id);
      if (textnameEstationEdit == null) {
        break missingId;
      }

      id = R.id.txtFreeStatio;
      MaterialTextView txtFreeStatio = ViewBindings.findChildViewById(rootView, id);
      if (txtFreeStatio == null) {
        break missingId;
      }

      id = R.id.txtbssiddEdit;
      TextInputLayout txtbssiddEdit = ViewBindings.findChildViewById(rootView, id);
      if (txtbssiddEdit == null) {
        break missingId;
      }

      id = R.id.txtlatEdit;
      TextInputLayout txtlatEdit = ViewBindings.findChildViewById(rootView, id);
      if (txtlatEdit == null) {
        break missingId;
      }

      id = R.id.txtlonEdit;
      TextInputLayout txtlonEdit = ViewBindings.findChildViewById(rootView, id);
      if (txtlonEdit == null) {
        break missingId;
      }

      id = R.id.txtrangoEdit;
      TextInputLayout txtrangoEdit = ViewBindings.findChildViewById(rootView, id);
      if (txtrangoEdit == null) {
        break missingId;
      }

      id = R.id.txtselectTypeEdit;
      TextInputLayout txtselectTypeEdit = ViewBindings.findChildViewById(rootView, id);
      if (txtselectTypeEdit == null) {
        break missingId;
      }

      id = R.id.txtuuidEdit;
      TextInputLayout txtuuidEdit = ViewBindings.findChildViewById(rootView, id);
      if (txtuuidEdit == null) {
        break missingId;
      }

      id = R.id.uuidEdit;
      TextInputEditText uuidEdit = ViewBindings.findChildViewById(rootView, id);
      if (uuidEdit == null) {
        break missingId;
      }

      return new FragmentEditStationsBinding((ConstraintLayout) rootView, bssiddEdit,
          btnBackListEstaciones, btnGuardarEstacionesEdit, editsearchEditext, frameMapsEdit,
          latEdit, linearCompany, binding_loadingAnimationEditStation, lonEdit, nameEstationEdit,
          rangoEdit, scrollEditStation, selectEstacionesEdit, selectTypeEdit, statusFreeStation,
          textnameEstationEdit, txtFreeStatio, txtbssiddEdit, txtlatEdit, txtlonEdit, txtrangoEdit,
          txtselectTypeEdit, txtuuidEdit, uuidEdit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
