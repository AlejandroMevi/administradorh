// Generated by view binder compiler. Do not edit!
package com.venturessoft.human.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.kyleduo.switchbutton.SwitchButton;
import com.venturessoft.human.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowsitemselectBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView arrayData;

  @NonNull
  public final AppCompatImageView checkDone;

  @NonNull
  public final TextView description;

  @NonNull
  public final LinearLayout headerSelect;

  @NonNull
  public final TextView idStationSelect;

  @NonNull
  public final SwitchButton statusDescripcion;

  private RowsitemselectBinding(@NonNull LinearLayout rootView, @NonNull TextView arrayData,
      @NonNull AppCompatImageView checkDone, @NonNull TextView description,
      @NonNull LinearLayout headerSelect, @NonNull TextView idStationSelect,
      @NonNull SwitchButton statusDescripcion) {
    this.rootView = rootView;
    this.arrayData = arrayData;
    this.checkDone = checkDone;
    this.description = description;
    this.headerSelect = headerSelect;
    this.idStationSelect = idStationSelect;
    this.statusDescripcion = statusDescripcion;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowsitemselectBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowsitemselectBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.rowsitemselect, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowsitemselectBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrayData;
      TextView arrayData = ViewBindings.findChildViewById(rootView, id);
      if (arrayData == null) {
        break missingId;
      }

      id = R.id.checkDone;
      AppCompatImageView checkDone = ViewBindings.findChildViewById(rootView, id);
      if (checkDone == null) {
        break missingId;
      }

      id = R.id.description;
      TextView description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      LinearLayout headerSelect = (LinearLayout) rootView;

      id = R.id.idStationSelect;
      TextView idStationSelect = ViewBindings.findChildViewById(rootView, id);
      if (idStationSelect == null) {
        break missingId;
      }

      id = R.id.statusDescripcion;
      SwitchButton statusDescripcion = ViewBindings.findChildViewById(rootView, id);
      if (statusDescripcion == null) {
        break missingId;
      }

      return new RowsitemselectBinding((LinearLayout) rootView, arrayData, checkDone, description,
          headerSelect, idStationSelect, statusDescripcion);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
