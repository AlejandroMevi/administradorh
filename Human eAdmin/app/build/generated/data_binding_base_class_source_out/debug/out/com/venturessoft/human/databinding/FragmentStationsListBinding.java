// Generated by view binder compiler. Do not edit!
package com.venturessoft.human.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.venturessoft.human.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentStationsListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FloatingActionButton addEstacion;

  @NonNull
  public final MaterialButton btnBackMenuListEst;

  @NonNull
  public final Button btnDeleteStation;

  @NonNull
  public final Button btnEditStatus;

  @NonNull
  public final Button btnGoToEdit;

  @NonNull
  public final TextInputEditText etFilter;

  @NonNull
  public final CardviewFreeTrailListBinding linearFreeTrial;

  @NonNull
  public final LinearLayoutCompat linearLayoutCompat3;

  @NonNull
  public final ViewLoadingNewBinding loadingAnimationStation;

  @NonNull
  public final RecyclerView reciclerEstaciones;

  @NonNull
  public final TextInputLayout searchTextField;

  private FragmentStationsListBinding(@NonNull ConstraintLayout rootView,
      @NonNull FloatingActionButton addEstacion, @NonNull MaterialButton btnBackMenuListEst,
      @NonNull Button btnDeleteStation, @NonNull Button btnEditStatus, @NonNull Button btnGoToEdit,
      @NonNull TextInputEditText etFilter, @NonNull CardviewFreeTrailListBinding linearFreeTrial,
      @NonNull LinearLayoutCompat linearLayoutCompat3,
      @NonNull ViewLoadingNewBinding loadingAnimationStation,
      @NonNull RecyclerView reciclerEstaciones, @NonNull TextInputLayout searchTextField) {
    this.rootView = rootView;
    this.addEstacion = addEstacion;
    this.btnBackMenuListEst = btnBackMenuListEst;
    this.btnDeleteStation = btnDeleteStation;
    this.btnEditStatus = btnEditStatus;
    this.btnGoToEdit = btnGoToEdit;
    this.etFilter = etFilter;
    this.linearFreeTrial = linearFreeTrial;
    this.linearLayoutCompat3 = linearLayoutCompat3;
    this.loadingAnimationStation = loadingAnimationStation;
    this.reciclerEstaciones = reciclerEstaciones;
    this.searchTextField = searchTextField;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentStationsListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentStationsListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_stations_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentStationsListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addEstacion;
      FloatingActionButton addEstacion = ViewBindings.findChildViewById(rootView, id);
      if (addEstacion == null) {
        break missingId;
      }

      id = R.id.btnBackMenuListEst;
      MaterialButton btnBackMenuListEst = ViewBindings.findChildViewById(rootView, id);
      if (btnBackMenuListEst == null) {
        break missingId;
      }

      id = R.id.btnDeleteStation;
      Button btnDeleteStation = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteStation == null) {
        break missingId;
      }

      id = R.id.btnEditStatus;
      Button btnEditStatus = ViewBindings.findChildViewById(rootView, id);
      if (btnEditStatus == null) {
        break missingId;
      }

      id = R.id.btnGoToEdit;
      Button btnGoToEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnGoToEdit == null) {
        break missingId;
      }

      id = R.id.etFilter;
      TextInputEditText etFilter = ViewBindings.findChildViewById(rootView, id);
      if (etFilter == null) {
        break missingId;
      }

      id = R.id.linearFreeTrial;
      View linearFreeTrial = ViewBindings.findChildViewById(rootView, id);
      if (linearFreeTrial == null) {
        break missingId;
      }
      CardviewFreeTrailListBinding binding_linearFreeTrial = CardviewFreeTrailListBinding.bind(linearFreeTrial);

      id = R.id.linearLayoutCompat3;
      LinearLayoutCompat linearLayoutCompat3 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutCompat3 == null) {
        break missingId;
      }

      id = R.id.loadingAnimationStation;
      View loadingAnimationStation = ViewBindings.findChildViewById(rootView, id);
      if (loadingAnimationStation == null) {
        break missingId;
      }
      ViewLoadingNewBinding binding_loadingAnimationStation = ViewLoadingNewBinding.bind(loadingAnimationStation);

      id = R.id.reciclerEstaciones;
      RecyclerView reciclerEstaciones = ViewBindings.findChildViewById(rootView, id);
      if (reciclerEstaciones == null) {
        break missingId;
      }

      id = R.id.searchTextField;
      TextInputLayout searchTextField = ViewBindings.findChildViewById(rootView, id);
      if (searchTextField == null) {
        break missingId;
      }

      return new FragmentStationsListBinding((ConstraintLayout) rootView, addEstacion,
          btnBackMenuListEst, btnDeleteStation, btnEditStatus, btnGoToEdit, etFilter,
          binding_linearFreeTrial, linearLayoutCompat3, binding_loadingAnimationStation,
          reciclerEstaciones, searchTextField);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
