// Generated by view binder compiler. Do not edit!
package com.venturessoft.human.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.venturessoft.human.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HeaderUserEstacionesLibresBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView bssid;

  @NonNull
  public final TextView date;

  @NonNull
  public final TextView idEmploye;

  @NonNull
  public final CircleImageView image;

  @NonNull
  public final ConstraintLayout lUserInfo;

  @NonNull
  public final LinearLayoutCompat linearLayoutCompat7;

  @NonNull
  public final TextView materialTextView13;

  @NonNull
  public final TextView name;

  @NonNull
  public final TextView position;

  @NonNull
  public final TextView status;

  private HeaderUserEstacionesLibresBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView bssid, @NonNull TextView date, @NonNull TextView idEmploye,
      @NonNull CircleImageView image, @NonNull ConstraintLayout lUserInfo,
      @NonNull LinearLayoutCompat linearLayoutCompat7, @NonNull TextView materialTextView13,
      @NonNull TextView name, @NonNull TextView position, @NonNull TextView status) {
    this.rootView = rootView;
    this.bssid = bssid;
    this.date = date;
    this.idEmploye = idEmploye;
    this.image = image;
    this.lUserInfo = lUserInfo;
    this.linearLayoutCompat7 = linearLayoutCompat7;
    this.materialTextView13 = materialTextView13;
    this.name = name;
    this.position = position;
    this.status = status;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static HeaderUserEstacionesLibresBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HeaderUserEstacionesLibresBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.header_user_estaciones_libres, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HeaderUserEstacionesLibresBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bssid;
      TextView bssid = ViewBindings.findChildViewById(rootView, id);
      if (bssid == null) {
        break missingId;
      }

      id = R.id.date;
      TextView date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      id = R.id.idEmploye;
      TextView idEmploye = ViewBindings.findChildViewById(rootView, id);
      if (idEmploye == null) {
        break missingId;
      }

      id = R.id.image;
      CircleImageView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      ConstraintLayout lUserInfo = (ConstraintLayout) rootView;

      id = R.id.linearLayoutCompat7;
      LinearLayoutCompat linearLayoutCompat7 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutCompat7 == null) {
        break missingId;
      }

      id = R.id.materialTextView13;
      TextView materialTextView13 = ViewBindings.findChildViewById(rootView, id);
      if (materialTextView13 == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.position;
      TextView position = ViewBindings.findChildViewById(rootView, id);
      if (position == null) {
        break missingId;
      }

      id = R.id.status;
      TextView status = ViewBindings.findChildViewById(rootView, id);
      if (status == null) {
        break missingId;
      }

      return new HeaderUserEstacionesLibresBinding((ConstraintLayout) rootView, bssid, date,
          idEmploye, image, lUserInfo, linearLayoutCompat7, materialTextView13, name, position,
          status);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
