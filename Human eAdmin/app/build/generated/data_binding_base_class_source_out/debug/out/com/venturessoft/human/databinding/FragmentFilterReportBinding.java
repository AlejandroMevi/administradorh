// Generated by view binder compiler. Do not edit!
package com.venturessoft.human.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.checkbox.MaterialCheckBox;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.venturessoft.human.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFilterReportBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnApply;

  @NonNull
  public final Button btnAtrReport;

  @NonNull
  public final MaterialCheckBox checkBoxAllEmployees;

  @NonNull
  public final TextInputEditText dateFrom;

  @NonNull
  public final TextInputEditText dateUp;

  @NonNull
  public final LinearLayout linearLayout19;

  @NonNull
  public final ViewLoadingNewBinding loadingAnimationFilter;

  @NonNull
  public final TextInputEditText numEmploye;

  @NonNull
  public final TextInputLayout tilDateFrom;

  @NonNull
  public final TextInputLayout tilNumEmploye;

  @NonNull
  public final TextInputLayout tildateUp;

  private FragmentFilterReportBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnApply, @NonNull Button btnAtrReport,
      @NonNull MaterialCheckBox checkBoxAllEmployees, @NonNull TextInputEditText dateFrom,
      @NonNull TextInputEditText dateUp, @NonNull LinearLayout linearLayout19,
      @NonNull ViewLoadingNewBinding loadingAnimationFilter, @NonNull TextInputEditText numEmploye,
      @NonNull TextInputLayout tilDateFrom, @NonNull TextInputLayout tilNumEmploye,
      @NonNull TextInputLayout tildateUp) {
    this.rootView = rootView;
    this.btnApply = btnApply;
    this.btnAtrReport = btnAtrReport;
    this.checkBoxAllEmployees = checkBoxAllEmployees;
    this.dateFrom = dateFrom;
    this.dateUp = dateUp;
    this.linearLayout19 = linearLayout19;
    this.loadingAnimationFilter = loadingAnimationFilter;
    this.numEmploye = numEmploye;
    this.tilDateFrom = tilDateFrom;
    this.tilNumEmploye = tilNumEmploye;
    this.tildateUp = tildateUp;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFilterReportBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFilterReportBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_filter_report, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFilterReportBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnApply;
      MaterialButton btnApply = ViewBindings.findChildViewById(rootView, id);
      if (btnApply == null) {
        break missingId;
      }

      id = R.id.btnAtrReport;
      Button btnAtrReport = ViewBindings.findChildViewById(rootView, id);
      if (btnAtrReport == null) {
        break missingId;
      }

      id = R.id.checkBoxAllEmployees;
      MaterialCheckBox checkBoxAllEmployees = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxAllEmployees == null) {
        break missingId;
      }

      id = R.id.dateFrom;
      TextInputEditText dateFrom = ViewBindings.findChildViewById(rootView, id);
      if (dateFrom == null) {
        break missingId;
      }

      id = R.id.dateUp;
      TextInputEditText dateUp = ViewBindings.findChildViewById(rootView, id);
      if (dateUp == null) {
        break missingId;
      }

      id = R.id.linearLayout19;
      LinearLayout linearLayout19 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout19 == null) {
        break missingId;
      }

      id = R.id.loadingAnimationFilter;
      View loadingAnimationFilter = ViewBindings.findChildViewById(rootView, id);
      if (loadingAnimationFilter == null) {
        break missingId;
      }
      ViewLoadingNewBinding binding_loadingAnimationFilter = ViewLoadingNewBinding.bind(loadingAnimationFilter);

      id = R.id.numEmploye;
      TextInputEditText numEmploye = ViewBindings.findChildViewById(rootView, id);
      if (numEmploye == null) {
        break missingId;
      }

      id = R.id.tilDateFrom;
      TextInputLayout tilDateFrom = ViewBindings.findChildViewById(rootView, id);
      if (tilDateFrom == null) {
        break missingId;
      }

      id = R.id.tilNumEmploye;
      TextInputLayout tilNumEmploye = ViewBindings.findChildViewById(rootView, id);
      if (tilNumEmploye == null) {
        break missingId;
      }

      id = R.id.tildateUp;
      TextInputLayout tildateUp = ViewBindings.findChildViewById(rootView, id);
      if (tildateUp == null) {
        break missingId;
      }

      return new FragmentFilterReportBinding((ConstraintLayout) rootView, btnApply, btnAtrReport,
          checkBoxAllEmployees, dateFrom, dateUp, linearLayout19, binding_loadingAnimationFilter,
          numEmploye, tilDateFrom, tilNumEmploye, tildateUp);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
