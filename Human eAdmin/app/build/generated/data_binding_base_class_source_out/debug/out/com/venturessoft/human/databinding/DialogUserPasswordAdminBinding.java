// Generated by view binder compiler. Do not edit!
package com.venturessoft.human.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import com.venturessoft.human.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogUserPasswordAdminBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button dialogNegativeButton;

  @NonNull
  public final Button dialogPositiveButton;

  @NonNull
  public final TextView dialogTitle;

  @NonNull
  public final EditText edtPassword;

  @NonNull
  public final TextInputLayout tvPassword;

  private DialogUserPasswordAdminBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button dialogNegativeButton, @NonNull Button dialogPositiveButton,
      @NonNull TextView dialogTitle, @NonNull EditText edtPassword,
      @NonNull TextInputLayout tvPassword) {
    this.rootView = rootView;
    this.dialogNegativeButton = dialogNegativeButton;
    this.dialogPositiveButton = dialogPositiveButton;
    this.dialogTitle = dialogTitle;
    this.edtPassword = edtPassword;
    this.tvPassword = tvPassword;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogUserPasswordAdminBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogUserPasswordAdminBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_user_password_admin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogUserPasswordAdminBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dialogNegativeButton;
      Button dialogNegativeButton = ViewBindings.findChildViewById(rootView, id);
      if (dialogNegativeButton == null) {
        break missingId;
      }

      id = R.id.dialogPositiveButton;
      Button dialogPositiveButton = ViewBindings.findChildViewById(rootView, id);
      if (dialogPositiveButton == null) {
        break missingId;
      }

      id = R.id.dialogTitle;
      TextView dialogTitle = ViewBindings.findChildViewById(rootView, id);
      if (dialogTitle == null) {
        break missingId;
      }

      id = R.id.edtPassword;
      EditText edtPassword = ViewBindings.findChildViewById(rootView, id);
      if (edtPassword == null) {
        break missingId;
      }

      id = R.id.tvPassword;
      TextInputLayout tvPassword = ViewBindings.findChildViewById(rootView, id);
      if (tvPassword == null) {
        break missingId;
      }

      return new DialogUserPasswordAdminBinding((ConstraintLayout) rootView, dialogNegativeButton,
          dialogPositiveButton, dialogTitle, edtPassword, tvPassword);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
