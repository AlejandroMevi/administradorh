// Generated by view binder compiler. Do not edit!
package com.venturessoft.human.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.venturessoft.human.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentZonesListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FloatingActionButton addZonee;

  @NonNull
  public final Button btnBackMenu;

  @NonNull
  public final Button deleteZone;

  @NonNull
  public final Button editZon;

  @NonNull
  public final ImageView editZoneList;

  @NonNull
  public final Button editZoneStatus;

  @NonNull
  public final TextInputEditText etFilter;

  @NonNull
  public final CardviewFreeTrailListBinding linearFreeTrial;

  @NonNull
  public final LinearLayoutCompat linearLayoutCompat2;

  @NonNull
  public final ViewLoadingNewBinding loadingAnimationZoneFragment;

  @NonNull
  public final RecyclerView reciclerZones;

  @NonNull
  public final TextInputLayout searchTextField;

  private FragmentZonesListBinding(@NonNull ConstraintLayout rootView,
      @NonNull FloatingActionButton addZonee, @NonNull Button btnBackMenu,
      @NonNull Button deleteZone, @NonNull Button editZon, @NonNull ImageView editZoneList,
      @NonNull Button editZoneStatus, @NonNull TextInputEditText etFilter,
      @NonNull CardviewFreeTrailListBinding linearFreeTrial,
      @NonNull LinearLayoutCompat linearLayoutCompat2,
      @NonNull ViewLoadingNewBinding loadingAnimationZoneFragment,
      @NonNull RecyclerView reciclerZones, @NonNull TextInputLayout searchTextField) {
    this.rootView = rootView;
    this.addZonee = addZonee;
    this.btnBackMenu = btnBackMenu;
    this.deleteZone = deleteZone;
    this.editZon = editZon;
    this.editZoneList = editZoneList;
    this.editZoneStatus = editZoneStatus;
    this.etFilter = etFilter;
    this.linearFreeTrial = linearFreeTrial;
    this.linearLayoutCompat2 = linearLayoutCompat2;
    this.loadingAnimationZoneFragment = loadingAnimationZoneFragment;
    this.reciclerZones = reciclerZones;
    this.searchTextField = searchTextField;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentZonesListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentZonesListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_zones_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentZonesListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addZonee;
      FloatingActionButton addZonee = ViewBindings.findChildViewById(rootView, id);
      if (addZonee == null) {
        break missingId;
      }

      id = R.id.btnBackMenu;
      Button btnBackMenu = ViewBindings.findChildViewById(rootView, id);
      if (btnBackMenu == null) {
        break missingId;
      }

      id = R.id.deleteZone;
      Button deleteZone = ViewBindings.findChildViewById(rootView, id);
      if (deleteZone == null) {
        break missingId;
      }

      id = R.id.editZon;
      Button editZon = ViewBindings.findChildViewById(rootView, id);
      if (editZon == null) {
        break missingId;
      }

      id = R.id.editZoneList;
      ImageView editZoneList = ViewBindings.findChildViewById(rootView, id);
      if (editZoneList == null) {
        break missingId;
      }

      id = R.id.editZoneStatus;
      Button editZoneStatus = ViewBindings.findChildViewById(rootView, id);
      if (editZoneStatus == null) {
        break missingId;
      }

      id = R.id.etFilter;
      TextInputEditText etFilter = ViewBindings.findChildViewById(rootView, id);
      if (etFilter == null) {
        break missingId;
      }

      id = R.id.linearFreeTrial;
      View linearFreeTrial = ViewBindings.findChildViewById(rootView, id);
      if (linearFreeTrial == null) {
        break missingId;
      }
      CardviewFreeTrailListBinding binding_linearFreeTrial = CardviewFreeTrailListBinding.bind(linearFreeTrial);

      id = R.id.linearLayoutCompat2;
      LinearLayoutCompat linearLayoutCompat2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutCompat2 == null) {
        break missingId;
      }

      id = R.id.loadingAnimationZoneFragment;
      View loadingAnimationZoneFragment = ViewBindings.findChildViewById(rootView, id);
      if (loadingAnimationZoneFragment == null) {
        break missingId;
      }
      ViewLoadingNewBinding binding_loadingAnimationZoneFragment = ViewLoadingNewBinding.bind(loadingAnimationZoneFragment);

      id = R.id.reciclerZones;
      RecyclerView reciclerZones = ViewBindings.findChildViewById(rootView, id);
      if (reciclerZones == null) {
        break missingId;
      }

      id = R.id.searchTextField;
      TextInputLayout searchTextField = ViewBindings.findChildViewById(rootView, id);
      if (searchTextField == null) {
        break missingId;
      }

      return new FragmentZonesListBinding((ConstraintLayout) rootView, addZonee, btnBackMenu,
          deleteZone, editZon, editZoneList, editZoneStatus, etFilter, binding_linearFreeTrial,
          linearLayoutCompat2, binding_loadingAnimationZoneFragment, reciclerZones,
          searchTextField);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
