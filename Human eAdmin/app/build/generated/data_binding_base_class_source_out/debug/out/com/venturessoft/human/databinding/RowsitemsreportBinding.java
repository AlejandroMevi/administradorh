// Generated by view binder compiler. Do not edit!
package com.venturessoft.human.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.venturessoft.human.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowsitemsreportBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView hourIn;

  @NonNull
  public final TextView hourOut;

  @NonNull
  public final TextView nEmployee;

  @NonNull
  public final TextView nameEmployee;

  private RowsitemsreportBinding(@NonNull LinearLayout rootView, @NonNull TextView hourIn,
      @NonNull TextView hourOut, @NonNull TextView nEmployee, @NonNull TextView nameEmployee) {
    this.rootView = rootView;
    this.hourIn = hourIn;
    this.hourOut = hourOut;
    this.nEmployee = nEmployee;
    this.nameEmployee = nameEmployee;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowsitemsreportBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowsitemsreportBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.rowsitemsreport, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowsitemsreportBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.hourIn;
      TextView hourIn = ViewBindings.findChildViewById(rootView, id);
      if (hourIn == null) {
        break missingId;
      }

      id = R.id.hourOut;
      TextView hourOut = ViewBindings.findChildViewById(rootView, id);
      if (hourOut == null) {
        break missingId;
      }

      id = R.id.nEmployee;
      TextView nEmployee = ViewBindings.findChildViewById(rootView, id);
      if (nEmployee == null) {
        break missingId;
      }

      id = R.id.nameEmployee;
      TextView nameEmployee = ViewBindings.findChildViewById(rootView, id);
      if (nameEmployee == null) {
        break missingId;
      }

      return new RowsitemsreportBinding((LinearLayout) rootView, hourIn, hourOut, nEmployee,
          nameEmployee);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
