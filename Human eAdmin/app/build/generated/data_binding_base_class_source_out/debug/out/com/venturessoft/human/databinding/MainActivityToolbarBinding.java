// Generated by view binder compiler. Do not edit!
package com.venturessoft.human.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import com.venturessoft.human.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MainActivityToolbarBinding implements ViewBinding {
  @NonNull
  private final Toolbar rootView;

  @NonNull
  public final Button backArrowBtn;

  @NonNull
  public final AppCompatImageView navigationDrawerButton;

  @NonNull
  public final MaterialTextView title;

  @NonNull
  public final Toolbar toolBarVentures;

  private MainActivityToolbarBinding(@NonNull Toolbar rootView, @NonNull Button backArrowBtn,
      @NonNull AppCompatImageView navigationDrawerButton, @NonNull MaterialTextView title,
      @NonNull Toolbar toolBarVentures) {
    this.rootView = rootView;
    this.backArrowBtn = backArrowBtn;
    this.navigationDrawerButton = navigationDrawerButton;
    this.title = title;
    this.toolBarVentures = toolBarVentures;
  }

  @Override
  @NonNull
  public Toolbar getRoot() {
    return rootView;
  }

  @NonNull
  public static MainActivityToolbarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MainActivityToolbarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.main_activity_toolbar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MainActivityToolbarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_arrow_btn;
      Button backArrowBtn = ViewBindings.findChildViewById(rootView, id);
      if (backArrowBtn == null) {
        break missingId;
      }

      id = R.id.navigationDrawerButton;
      AppCompatImageView navigationDrawerButton = ViewBindings.findChildViewById(rootView, id);
      if (navigationDrawerButton == null) {
        break missingId;
      }

      id = R.id.title;
      MaterialTextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      Toolbar toolBarVentures = (Toolbar) rootView;

      return new MainActivityToolbarBinding((Toolbar) rootView, backArrowBtn,
          navigationDrawerButton, title, toolBarVentures);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
