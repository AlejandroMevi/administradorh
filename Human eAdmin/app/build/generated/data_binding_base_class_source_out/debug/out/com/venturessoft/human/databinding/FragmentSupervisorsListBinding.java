// Generated by view binder compiler. Do not edit!
package com.venturessoft.human.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.venturessoft.human.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSupervisorsListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FloatingActionButton addSuperSpiner;

  @NonNull
  public final Button btnBackMenuListSuper;

  @NonNull
  public final Button btnDeleteSuper;

  @NonNull
  public final Button btnGoToEditSuper;

  @NonNull
  public final Button btnStatus;

  @NonNull
  public final ImageView editZone;

  @NonNull
  public final TextInputEditText etFilter;

  @NonNull
  public final LinearLayoutCompat linearFree;

  @NonNull
  public final CardviewFreeTrailListBinding linearFreeTrial;

  @NonNull
  public final ViewLoadingNewBinding loadingAnimationListSuper;

  @NonNull
  public final RecyclerView reciclerListSuper;

  @NonNull
  public final TextInputLayout searchTextField;

  private FragmentSupervisorsListBinding(@NonNull ConstraintLayout rootView,
      @NonNull FloatingActionButton addSuperSpiner, @NonNull Button btnBackMenuListSuper,
      @NonNull Button btnDeleteSuper, @NonNull Button btnGoToEditSuper, @NonNull Button btnStatus,
      @NonNull ImageView editZone, @NonNull TextInputEditText etFilter,
      @NonNull LinearLayoutCompat linearFree, @NonNull CardviewFreeTrailListBinding linearFreeTrial,
      @NonNull ViewLoadingNewBinding loadingAnimationListSuper,
      @NonNull RecyclerView reciclerListSuper, @NonNull TextInputLayout searchTextField) {
    this.rootView = rootView;
    this.addSuperSpiner = addSuperSpiner;
    this.btnBackMenuListSuper = btnBackMenuListSuper;
    this.btnDeleteSuper = btnDeleteSuper;
    this.btnGoToEditSuper = btnGoToEditSuper;
    this.btnStatus = btnStatus;
    this.editZone = editZone;
    this.etFilter = etFilter;
    this.linearFree = linearFree;
    this.linearFreeTrial = linearFreeTrial;
    this.loadingAnimationListSuper = loadingAnimationListSuper;
    this.reciclerListSuper = reciclerListSuper;
    this.searchTextField = searchTextField;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSupervisorsListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSupervisorsListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_supervisors_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSupervisorsListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addSuperSpiner;
      FloatingActionButton addSuperSpiner = ViewBindings.findChildViewById(rootView, id);
      if (addSuperSpiner == null) {
        break missingId;
      }

      id = R.id.btnBackMenuListSuper;
      Button btnBackMenuListSuper = ViewBindings.findChildViewById(rootView, id);
      if (btnBackMenuListSuper == null) {
        break missingId;
      }

      id = R.id.btnDeleteSuper;
      Button btnDeleteSuper = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteSuper == null) {
        break missingId;
      }

      id = R.id.btnGoToEditSuper;
      Button btnGoToEditSuper = ViewBindings.findChildViewById(rootView, id);
      if (btnGoToEditSuper == null) {
        break missingId;
      }

      id = R.id.btnStatus;
      Button btnStatus = ViewBindings.findChildViewById(rootView, id);
      if (btnStatus == null) {
        break missingId;
      }

      id = R.id.editZone;
      ImageView editZone = ViewBindings.findChildViewById(rootView, id);
      if (editZone == null) {
        break missingId;
      }

      id = R.id.etFilter;
      TextInputEditText etFilter = ViewBindings.findChildViewById(rootView, id);
      if (etFilter == null) {
        break missingId;
      }

      id = R.id.linearFree;
      LinearLayoutCompat linearFree = ViewBindings.findChildViewById(rootView, id);
      if (linearFree == null) {
        break missingId;
      }

      id = R.id.linearFreeTrial;
      View linearFreeTrial = ViewBindings.findChildViewById(rootView, id);
      if (linearFreeTrial == null) {
        break missingId;
      }
      CardviewFreeTrailListBinding binding_linearFreeTrial = CardviewFreeTrailListBinding.bind(linearFreeTrial);

      id = R.id.loadingAnimationListSuper;
      View loadingAnimationListSuper = ViewBindings.findChildViewById(rootView, id);
      if (loadingAnimationListSuper == null) {
        break missingId;
      }
      ViewLoadingNewBinding binding_loadingAnimationListSuper = ViewLoadingNewBinding.bind(loadingAnimationListSuper);

      id = R.id.reciclerListSuper;
      RecyclerView reciclerListSuper = ViewBindings.findChildViewById(rootView, id);
      if (reciclerListSuper == null) {
        break missingId;
      }

      id = R.id.searchTextField;
      TextInputLayout searchTextField = ViewBindings.findChildViewById(rootView, id);
      if (searchTextField == null) {
        break missingId;
      }

      return new FragmentSupervisorsListBinding((ConstraintLayout) rootView, addSuperSpiner,
          btnBackMenuListSuper, btnDeleteSuper, btnGoToEditSuper, btnStatus, editZone, etFilter,
          linearFree, binding_linearFreeTrial, binding_loadingAnimationListSuper, reciclerListSuper,
          searchTextField);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
