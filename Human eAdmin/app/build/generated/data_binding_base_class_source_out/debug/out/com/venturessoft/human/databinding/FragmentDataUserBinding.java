// Generated by view binder compiler. Do not edit!
package com.venturessoft.human.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.MaterialAutoCompleteTextView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.google.android.material.textview.MaterialTextView;
import com.venturessoft.human.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDataUserBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputEditText apMaterno;

  @NonNull
  public final TextInputEditText apPaterno;

  @NonNull
  public final MaterialButton btnNext;

  @NonNull
  public final TextInputEditText emailAdminData;

  @NonNull
  public final ViewLoadingNewBinding loadingAnimationAdminData;

  @NonNull
  public final TextInputEditText nameAdmin;

  @NonNull
  public final MaterialAutoCompleteTextView phoneCodeSpinnerAdmin;

  @NonNull
  public final TextInputEditText phoneNumberAdminn;

  @NonNull
  public final MaterialTextView textView8;

  @NonNull
  public final TextInputLayout textnameAdmin;

  @NonNull
  public final TextInputLayout tilPhoneCodeSpinnerAdmin;

  @NonNull
  public final TextInputLayout txtapMaterno;

  @NonNull
  public final TextInputLayout txtapPaterno;

  @NonNull
  public final TextInputLayout txtemailAdminData;

  @NonNull
  public final TextInputLayout txtphoneNumberAdminn;

  private FragmentDataUserBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputEditText apMaterno, @NonNull TextInputEditText apPaterno,
      @NonNull MaterialButton btnNext, @NonNull TextInputEditText emailAdminData,
      @NonNull ViewLoadingNewBinding loadingAnimationAdminData,
      @NonNull TextInputEditText nameAdmin,
      @NonNull MaterialAutoCompleteTextView phoneCodeSpinnerAdmin,
      @NonNull TextInputEditText phoneNumberAdminn, @NonNull MaterialTextView textView8,
      @NonNull TextInputLayout textnameAdmin, @NonNull TextInputLayout tilPhoneCodeSpinnerAdmin,
      @NonNull TextInputLayout txtapMaterno, @NonNull TextInputLayout txtapPaterno,
      @NonNull TextInputLayout txtemailAdminData, @NonNull TextInputLayout txtphoneNumberAdminn) {
    this.rootView = rootView;
    this.apMaterno = apMaterno;
    this.apPaterno = apPaterno;
    this.btnNext = btnNext;
    this.emailAdminData = emailAdminData;
    this.loadingAnimationAdminData = loadingAnimationAdminData;
    this.nameAdmin = nameAdmin;
    this.phoneCodeSpinnerAdmin = phoneCodeSpinnerAdmin;
    this.phoneNumberAdminn = phoneNumberAdminn;
    this.textView8 = textView8;
    this.textnameAdmin = textnameAdmin;
    this.tilPhoneCodeSpinnerAdmin = tilPhoneCodeSpinnerAdmin;
    this.txtapMaterno = txtapMaterno;
    this.txtapPaterno = txtapPaterno;
    this.txtemailAdminData = txtemailAdminData;
    this.txtphoneNumberAdminn = txtphoneNumberAdminn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDataUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDataUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_data_user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDataUserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.apMaterno;
      TextInputEditText apMaterno = ViewBindings.findChildViewById(rootView, id);
      if (apMaterno == null) {
        break missingId;
      }

      id = R.id.apPaterno;
      TextInputEditText apPaterno = ViewBindings.findChildViewById(rootView, id);
      if (apPaterno == null) {
        break missingId;
      }

      id = R.id.btnNext;
      MaterialButton btnNext = ViewBindings.findChildViewById(rootView, id);
      if (btnNext == null) {
        break missingId;
      }

      id = R.id.emailAdminData;
      TextInputEditText emailAdminData = ViewBindings.findChildViewById(rootView, id);
      if (emailAdminData == null) {
        break missingId;
      }

      id = R.id.loadingAnimationAdminData;
      View loadingAnimationAdminData = ViewBindings.findChildViewById(rootView, id);
      if (loadingAnimationAdminData == null) {
        break missingId;
      }
      ViewLoadingNewBinding binding_loadingAnimationAdminData = ViewLoadingNewBinding.bind(loadingAnimationAdminData);

      id = R.id.nameAdmin;
      TextInputEditText nameAdmin = ViewBindings.findChildViewById(rootView, id);
      if (nameAdmin == null) {
        break missingId;
      }

      id = R.id.phoneCodeSpinnerAdmin;
      MaterialAutoCompleteTextView phoneCodeSpinnerAdmin = ViewBindings.findChildViewById(rootView, id);
      if (phoneCodeSpinnerAdmin == null) {
        break missingId;
      }

      id = R.id.phoneNumberAdminn;
      TextInputEditText phoneNumberAdminn = ViewBindings.findChildViewById(rootView, id);
      if (phoneNumberAdminn == null) {
        break missingId;
      }

      id = R.id.textView8;
      MaterialTextView textView8 = ViewBindings.findChildViewById(rootView, id);
      if (textView8 == null) {
        break missingId;
      }

      id = R.id.textnameAdmin;
      TextInputLayout textnameAdmin = ViewBindings.findChildViewById(rootView, id);
      if (textnameAdmin == null) {
        break missingId;
      }

      id = R.id.tilPhoneCodeSpinnerAdmin;
      TextInputLayout tilPhoneCodeSpinnerAdmin = ViewBindings.findChildViewById(rootView, id);
      if (tilPhoneCodeSpinnerAdmin == null) {
        break missingId;
      }

      id = R.id.txtapMaterno;
      TextInputLayout txtapMaterno = ViewBindings.findChildViewById(rootView, id);
      if (txtapMaterno == null) {
        break missingId;
      }

      id = R.id.txtapPaterno;
      TextInputLayout txtapPaterno = ViewBindings.findChildViewById(rootView, id);
      if (txtapPaterno == null) {
        break missingId;
      }

      id = R.id.txtemailAdminData;
      TextInputLayout txtemailAdminData = ViewBindings.findChildViewById(rootView, id);
      if (txtemailAdminData == null) {
        break missingId;
      }

      id = R.id.txtphoneNumberAdminn;
      TextInputLayout txtphoneNumberAdminn = ViewBindings.findChildViewById(rootView, id);
      if (txtphoneNumberAdminn == null) {
        break missingId;
      }

      return new FragmentDataUserBinding((ConstraintLayout) rootView, apMaterno, apPaterno, btnNext,
          emailAdminData, binding_loadingAnimationAdminData, nameAdmin, phoneCodeSpinnerAdmin,
          phoneNumberAdminn, textView8, textnameAdmin, tilPhoneCodeSpinnerAdmin, txtapMaterno,
          txtapPaterno, txtemailAdminData, txtphoneNumberAdminn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
