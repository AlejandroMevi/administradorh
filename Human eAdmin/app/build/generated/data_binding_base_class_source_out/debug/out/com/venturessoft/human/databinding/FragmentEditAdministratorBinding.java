// Generated by view binder compiler. Do not edit!
package com.venturessoft.human.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.materialswitch.MaterialSwitch;
import com.google.android.material.textfield.MaterialAutoCompleteTextView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.venturessoft.human.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentEditAdministratorBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout adminLayoutFragment;

  @NonNull
  public final TextInputEditText apMaterno;

  @NonNull
  public final TextInputEditText apPaterno;

  @NonNull
  public final MaterialButton btnEdit;

  @NonNull
  public final MaterialButton btnNextDataCompany;

  @NonNull
  public final Button btnRegisterAdmin;

  @NonNull
  public final TextInputEditText emailAdminData;

  @NonNull
  public final ViewLoadingNewBinding loadingAnimationWelcome;

  @NonNull
  public final TextInputEditText nameAdmin;

  @NonNull
  public final MaterialAutoCompleteTextView phoneCodeSpinnerAdmin;

  @NonNull
  public final TextInputEditText phoneNumberAdminn;

  @NonNull
  public final NestedScrollView scrollView2;

  @NonNull
  public final MaterialSwitch swEdit;

  @NonNull
  public final TextInputLayout tilApMaterno;

  @NonNull
  public final TextInputLayout tilApPaterno;

  @NonNull
  public final TextInputLayout tilEmailAdminData;

  @NonNull
  public final TextInputLayout tilNameAdmin;

  @NonNull
  public final TextInputLayout tilPhoneCodeSpinnerAdmin;

  @NonNull
  public final TextInputLayout tilPhoneNumberAdminn;

  private FragmentEditAdministratorBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout adminLayoutFragment, @NonNull TextInputEditText apMaterno,
      @NonNull TextInputEditText apPaterno, @NonNull MaterialButton btnEdit,
      @NonNull MaterialButton btnNextDataCompany, @NonNull Button btnRegisterAdmin,
      @NonNull TextInputEditText emailAdminData,
      @NonNull ViewLoadingNewBinding loadingAnimationWelcome, @NonNull TextInputEditText nameAdmin,
      @NonNull MaterialAutoCompleteTextView phoneCodeSpinnerAdmin,
      @NonNull TextInputEditText phoneNumberAdminn, @NonNull NestedScrollView scrollView2,
      @NonNull MaterialSwitch swEdit, @NonNull TextInputLayout tilApMaterno,
      @NonNull TextInputLayout tilApPaterno, @NonNull TextInputLayout tilEmailAdminData,
      @NonNull TextInputLayout tilNameAdmin, @NonNull TextInputLayout tilPhoneCodeSpinnerAdmin,
      @NonNull TextInputLayout tilPhoneNumberAdminn) {
    this.rootView = rootView;
    this.adminLayoutFragment = adminLayoutFragment;
    this.apMaterno = apMaterno;
    this.apPaterno = apPaterno;
    this.btnEdit = btnEdit;
    this.btnNextDataCompany = btnNextDataCompany;
    this.btnRegisterAdmin = btnRegisterAdmin;
    this.emailAdminData = emailAdminData;
    this.loadingAnimationWelcome = loadingAnimationWelcome;
    this.nameAdmin = nameAdmin;
    this.phoneCodeSpinnerAdmin = phoneCodeSpinnerAdmin;
    this.phoneNumberAdminn = phoneNumberAdminn;
    this.scrollView2 = scrollView2;
    this.swEdit = swEdit;
    this.tilApMaterno = tilApMaterno;
    this.tilApPaterno = tilApPaterno;
    this.tilEmailAdminData = tilEmailAdminData;
    this.tilNameAdmin = tilNameAdmin;
    this.tilPhoneCodeSpinnerAdmin = tilPhoneCodeSpinnerAdmin;
    this.tilPhoneNumberAdminn = tilPhoneNumberAdminn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentEditAdministratorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentEditAdministratorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_edit_administrator, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentEditAdministratorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adminLayoutFragment;
      LinearLayout adminLayoutFragment = ViewBindings.findChildViewById(rootView, id);
      if (adminLayoutFragment == null) {
        break missingId;
      }

      id = R.id.apMaterno;
      TextInputEditText apMaterno = ViewBindings.findChildViewById(rootView, id);
      if (apMaterno == null) {
        break missingId;
      }

      id = R.id.apPaterno;
      TextInputEditText apPaterno = ViewBindings.findChildViewById(rootView, id);
      if (apPaterno == null) {
        break missingId;
      }

      id = R.id.btnEdit;
      MaterialButton btnEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnEdit == null) {
        break missingId;
      }

      id = R.id.btnNextDataCompany;
      MaterialButton btnNextDataCompany = ViewBindings.findChildViewById(rootView, id);
      if (btnNextDataCompany == null) {
        break missingId;
      }

      id = R.id.btnRegisterAdmin;
      Button btnRegisterAdmin = ViewBindings.findChildViewById(rootView, id);
      if (btnRegisterAdmin == null) {
        break missingId;
      }

      id = R.id.emailAdminData;
      TextInputEditText emailAdminData = ViewBindings.findChildViewById(rootView, id);
      if (emailAdminData == null) {
        break missingId;
      }

      id = R.id.loadingAnimationWelcome;
      View loadingAnimationWelcome = ViewBindings.findChildViewById(rootView, id);
      if (loadingAnimationWelcome == null) {
        break missingId;
      }
      ViewLoadingNewBinding binding_loadingAnimationWelcome = ViewLoadingNewBinding.bind(loadingAnimationWelcome);

      id = R.id.nameAdmin;
      TextInputEditText nameAdmin = ViewBindings.findChildViewById(rootView, id);
      if (nameAdmin == null) {
        break missingId;
      }

      id = R.id.phoneCodeSpinnerAdmin;
      MaterialAutoCompleteTextView phoneCodeSpinnerAdmin = ViewBindings.findChildViewById(rootView, id);
      if (phoneCodeSpinnerAdmin == null) {
        break missingId;
      }

      id = R.id.phoneNumberAdminn;
      TextInputEditText phoneNumberAdminn = ViewBindings.findChildViewById(rootView, id);
      if (phoneNumberAdminn == null) {
        break missingId;
      }

      id = R.id.scrollView2;
      NestedScrollView scrollView2 = ViewBindings.findChildViewById(rootView, id);
      if (scrollView2 == null) {
        break missingId;
      }

      id = R.id.swEdit;
      MaterialSwitch swEdit = ViewBindings.findChildViewById(rootView, id);
      if (swEdit == null) {
        break missingId;
      }

      id = R.id.tilApMaterno;
      TextInputLayout tilApMaterno = ViewBindings.findChildViewById(rootView, id);
      if (tilApMaterno == null) {
        break missingId;
      }

      id = R.id.tilApPaterno;
      TextInputLayout tilApPaterno = ViewBindings.findChildViewById(rootView, id);
      if (tilApPaterno == null) {
        break missingId;
      }

      id = R.id.tilEmailAdminData;
      TextInputLayout tilEmailAdminData = ViewBindings.findChildViewById(rootView, id);
      if (tilEmailAdminData == null) {
        break missingId;
      }

      id = R.id.tilNameAdmin;
      TextInputLayout tilNameAdmin = ViewBindings.findChildViewById(rootView, id);
      if (tilNameAdmin == null) {
        break missingId;
      }

      id = R.id.tilPhoneCodeSpinnerAdmin;
      TextInputLayout tilPhoneCodeSpinnerAdmin = ViewBindings.findChildViewById(rootView, id);
      if (tilPhoneCodeSpinnerAdmin == null) {
        break missingId;
      }

      id = R.id.tilPhoneNumberAdminn;
      TextInputLayout tilPhoneNumberAdminn = ViewBindings.findChildViewById(rootView, id);
      if (tilPhoneNumberAdminn == null) {
        break missingId;
      }

      return new FragmentEditAdministratorBinding((ConstraintLayout) rootView, adminLayoutFragment,
          apMaterno, apPaterno, btnEdit, btnNextDataCompany, btnRegisterAdmin, emailAdminData,
          binding_loadingAnimationWelcome, nameAdmin, phoneCodeSpinnerAdmin, phoneNumberAdminn,
          scrollView2, swEdit, tilApMaterno, tilApPaterno, tilEmailAdminData, tilNameAdmin,
          tilPhoneCodeSpinnerAdmin, tilPhoneNumberAdminn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
