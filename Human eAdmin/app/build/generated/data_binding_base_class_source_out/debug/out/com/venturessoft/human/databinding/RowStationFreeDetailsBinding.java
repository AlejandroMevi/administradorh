// Generated by view binder compiler. Do not edit!
package com.venturessoft.human.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.venturessoft.human.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowStationFreeDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView dateCheckStation;

  @NonNull
  public final FrameLayout fragmentLayoutStationFree;

  @NonNull
  public final LinearLayout frameMapsEditStation;

  @NonNull
  public final CircleImageView imgAvatarEmployeeStation;

  @NonNull
  public final TextView txtDateCheckStation;

  @NonNull
  public final TextView txtViewIdEmployee;

  @NonNull
  public final TextView txtViewNameEmployee;

  @NonNull
  public final TextView txtViewNameStation;

  @NonNull
  public final TextView txtViewNameTypeStation;

  @NonNull
  public final TextView txtViewStation;

  @NonNull
  public final TextView txtViewType;

  private RowStationFreeDetailsBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView dateCheckStation, @NonNull FrameLayout fragmentLayoutStationFree,
      @NonNull LinearLayout frameMapsEditStation, @NonNull CircleImageView imgAvatarEmployeeStation,
      @NonNull TextView txtDateCheckStation, @NonNull TextView txtViewIdEmployee,
      @NonNull TextView txtViewNameEmployee, @NonNull TextView txtViewNameStation,
      @NonNull TextView txtViewNameTypeStation, @NonNull TextView txtViewStation,
      @NonNull TextView txtViewType) {
    this.rootView = rootView;
    this.dateCheckStation = dateCheckStation;
    this.fragmentLayoutStationFree = fragmentLayoutStationFree;
    this.frameMapsEditStation = frameMapsEditStation;
    this.imgAvatarEmployeeStation = imgAvatarEmployeeStation;
    this.txtDateCheckStation = txtDateCheckStation;
    this.txtViewIdEmployee = txtViewIdEmployee;
    this.txtViewNameEmployee = txtViewNameEmployee;
    this.txtViewNameStation = txtViewNameStation;
    this.txtViewNameTypeStation = txtViewNameTypeStation;
    this.txtViewStation = txtViewStation;
    this.txtViewType = txtViewType;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowStationFreeDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowStationFreeDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_station_free_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowStationFreeDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dateCheckStation;
      TextView dateCheckStation = ViewBindings.findChildViewById(rootView, id);
      if (dateCheckStation == null) {
        break missingId;
      }

      id = R.id.fragmentLayoutStationFree;
      FrameLayout fragmentLayoutStationFree = ViewBindings.findChildViewById(rootView, id);
      if (fragmentLayoutStationFree == null) {
        break missingId;
      }

      id = R.id.frameMapsEditStation;
      LinearLayout frameMapsEditStation = ViewBindings.findChildViewById(rootView, id);
      if (frameMapsEditStation == null) {
        break missingId;
      }

      id = R.id.imgAvatarEmployeeStation;
      CircleImageView imgAvatarEmployeeStation = ViewBindings.findChildViewById(rootView, id);
      if (imgAvatarEmployeeStation == null) {
        break missingId;
      }

      id = R.id.txtDateCheckStation;
      TextView txtDateCheckStation = ViewBindings.findChildViewById(rootView, id);
      if (txtDateCheckStation == null) {
        break missingId;
      }

      id = R.id.txtViewIdEmployee;
      TextView txtViewIdEmployee = ViewBindings.findChildViewById(rootView, id);
      if (txtViewIdEmployee == null) {
        break missingId;
      }

      id = R.id.txtViewNameEmployee;
      TextView txtViewNameEmployee = ViewBindings.findChildViewById(rootView, id);
      if (txtViewNameEmployee == null) {
        break missingId;
      }

      id = R.id.txtViewNameStation;
      TextView txtViewNameStation = ViewBindings.findChildViewById(rootView, id);
      if (txtViewNameStation == null) {
        break missingId;
      }

      id = R.id.txtViewNameTypeStation;
      TextView txtViewNameTypeStation = ViewBindings.findChildViewById(rootView, id);
      if (txtViewNameTypeStation == null) {
        break missingId;
      }

      id = R.id.txtViewStation;
      TextView txtViewStation = ViewBindings.findChildViewById(rootView, id);
      if (txtViewStation == null) {
        break missingId;
      }

      id = R.id.txtViewType;
      TextView txtViewType = ViewBindings.findChildViewById(rootView, id);
      if (txtViewType == null) {
        break missingId;
      }

      return new RowStationFreeDetailsBinding((ConstraintLayout) rootView, dateCheckStation,
          fragmentLayoutStationFree, frameMapsEditStation, imgAvatarEmployeeStation,
          txtDateCheckStation, txtViewIdEmployee, txtViewNameEmployee, txtViewNameStation,
          txtViewNameTypeStation, txtViewStation, txtViewType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
