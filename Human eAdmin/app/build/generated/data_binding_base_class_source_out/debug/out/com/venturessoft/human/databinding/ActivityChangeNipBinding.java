// Generated by view binder compiler. Do not edit!
package com.venturessoft.human.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.venturessoft.human.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityChangeNipBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ViewLoadingNewBinding animationChangeNipV;

  @NonNull
  public final MaterialButton btnChangeNipV;

  @NonNull
  public final TextInputEditText confirmNipTextField;

  @NonNull
  public final TextInputLayout confirmNipTitle;

  @NonNull
  public final TextInputEditText curpTextField;

  @NonNull
  public final TextInputLayout curpTitle;

  @NonNull
  public final TextInputEditText currentNipTextField;

  @NonNull
  public final TextInputLayout currentNipTitle;

  @NonNull
  public final TextInputEditText newNipTextField;

  @NonNull
  public final TextInputLayout newNipTitle;

  @NonNull
  public final TextInputEditText rfcTextField;

  @NonNull
  public final TextInputLayout rfcTitle;

  @NonNull
  public final MainActivityToolbarBinding toolBar;

  private ActivityChangeNipBinding(@NonNull ConstraintLayout rootView,
      @NonNull ViewLoadingNewBinding animationChangeNipV, @NonNull MaterialButton btnChangeNipV,
      @NonNull TextInputEditText confirmNipTextField, @NonNull TextInputLayout confirmNipTitle,
      @NonNull TextInputEditText curpTextField, @NonNull TextInputLayout curpTitle,
      @NonNull TextInputEditText currentNipTextField, @NonNull TextInputLayout currentNipTitle,
      @NonNull TextInputEditText newNipTextField, @NonNull TextInputLayout newNipTitle,
      @NonNull TextInputEditText rfcTextField, @NonNull TextInputLayout rfcTitle,
      @NonNull MainActivityToolbarBinding toolBar) {
    this.rootView = rootView;
    this.animationChangeNipV = animationChangeNipV;
    this.btnChangeNipV = btnChangeNipV;
    this.confirmNipTextField = confirmNipTextField;
    this.confirmNipTitle = confirmNipTitle;
    this.curpTextField = curpTextField;
    this.curpTitle = curpTitle;
    this.currentNipTextField = currentNipTextField;
    this.currentNipTitle = currentNipTitle;
    this.newNipTextField = newNipTextField;
    this.newNipTitle = newNipTitle;
    this.rfcTextField = rfcTextField;
    this.rfcTitle = rfcTitle;
    this.toolBar = toolBar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityChangeNipBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChangeNipBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_change_nip, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChangeNipBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.animationChangeNipV;
      View animationChangeNipV = ViewBindings.findChildViewById(rootView, id);
      if (animationChangeNipV == null) {
        break missingId;
      }
      ViewLoadingNewBinding binding_animationChangeNipV = ViewLoadingNewBinding.bind(animationChangeNipV);

      id = R.id.btnChangeNipV;
      MaterialButton btnChangeNipV = ViewBindings.findChildViewById(rootView, id);
      if (btnChangeNipV == null) {
        break missingId;
      }

      id = R.id.confirmNipTextField;
      TextInputEditText confirmNipTextField = ViewBindings.findChildViewById(rootView, id);
      if (confirmNipTextField == null) {
        break missingId;
      }

      id = R.id.confirmNipTitle;
      TextInputLayout confirmNipTitle = ViewBindings.findChildViewById(rootView, id);
      if (confirmNipTitle == null) {
        break missingId;
      }

      id = R.id.curpTextField;
      TextInputEditText curpTextField = ViewBindings.findChildViewById(rootView, id);
      if (curpTextField == null) {
        break missingId;
      }

      id = R.id.curpTitle;
      TextInputLayout curpTitle = ViewBindings.findChildViewById(rootView, id);
      if (curpTitle == null) {
        break missingId;
      }

      id = R.id.currentNipTextField;
      TextInputEditText currentNipTextField = ViewBindings.findChildViewById(rootView, id);
      if (currentNipTextField == null) {
        break missingId;
      }

      id = R.id.currentNipTitle;
      TextInputLayout currentNipTitle = ViewBindings.findChildViewById(rootView, id);
      if (currentNipTitle == null) {
        break missingId;
      }

      id = R.id.newNipTextField;
      TextInputEditText newNipTextField = ViewBindings.findChildViewById(rootView, id);
      if (newNipTextField == null) {
        break missingId;
      }

      id = R.id.newNipTitle;
      TextInputLayout newNipTitle = ViewBindings.findChildViewById(rootView, id);
      if (newNipTitle == null) {
        break missingId;
      }

      id = R.id.rfcTextField;
      TextInputEditText rfcTextField = ViewBindings.findChildViewById(rootView, id);
      if (rfcTextField == null) {
        break missingId;
      }

      id = R.id.rfcTitle;
      TextInputLayout rfcTitle = ViewBindings.findChildViewById(rootView, id);
      if (rfcTitle == null) {
        break missingId;
      }

      id = R.id.toolBar;
      View toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }
      MainActivityToolbarBinding binding_toolBar = MainActivityToolbarBinding.bind(toolBar);

      return new ActivityChangeNipBinding((ConstraintLayout) rootView, binding_animationChangeNipV,
          btnChangeNipV, confirmNipTextField, confirmNipTitle, curpTextField, curpTitle,
          currentNipTextField, currentNipTitle, newNipTextField, newNipTitle, rfcTextField,
          rfcTitle, binding_toolBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
