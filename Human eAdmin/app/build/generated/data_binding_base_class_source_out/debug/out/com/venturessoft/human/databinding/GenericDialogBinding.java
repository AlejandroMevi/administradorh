// Generated by view binder compiler. Do not edit!
package com.venturessoft.human.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textview.MaterialTextView;
import com.venturessoft.human.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class GenericDialogBinding implements ViewBinding {
  @NonNull
  private final LinearLayoutCompat rootView;

  @NonNull
  public final LinearLayoutCompat clBackgroung;

  @NonNull
  public final MaterialTextView dialogMessage;

  @NonNull
  public final MaterialButton dialogNegativeButton;

  @NonNull
  public final MaterialButton dialogPositiveButton;

  @NonNull
  public final MaterialTextView dialogTitle;

  private GenericDialogBinding(@NonNull LinearLayoutCompat rootView,
      @NonNull LinearLayoutCompat clBackgroung, @NonNull MaterialTextView dialogMessage,
      @NonNull MaterialButton dialogNegativeButton, @NonNull MaterialButton dialogPositiveButton,
      @NonNull MaterialTextView dialogTitle) {
    this.rootView = rootView;
    this.clBackgroung = clBackgroung;
    this.dialogMessage = dialogMessage;
    this.dialogNegativeButton = dialogNegativeButton;
    this.dialogPositiveButton = dialogPositiveButton;
    this.dialogTitle = dialogTitle;
  }

  @Override
  @NonNull
  public LinearLayoutCompat getRoot() {
    return rootView;
  }

  @NonNull
  public static GenericDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static GenericDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.generic_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static GenericDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayoutCompat clBackgroung = (LinearLayoutCompat) rootView;

      id = R.id.dialogMessage;
      MaterialTextView dialogMessage = ViewBindings.findChildViewById(rootView, id);
      if (dialogMessage == null) {
        break missingId;
      }

      id = R.id.dialogNegativeButton;
      MaterialButton dialogNegativeButton = ViewBindings.findChildViewById(rootView, id);
      if (dialogNegativeButton == null) {
        break missingId;
      }

      id = R.id.dialogPositiveButton;
      MaterialButton dialogPositiveButton = ViewBindings.findChildViewById(rootView, id);
      if (dialogPositiveButton == null) {
        break missingId;
      }

      id = R.id.dialogTitle;
      MaterialTextView dialogTitle = ViewBindings.findChildViewById(rootView, id);
      if (dialogTitle == null) {
        break missingId;
      }

      return new GenericDialogBinding((LinearLayoutCompat) rootView, clBackgroung, dialogMessage,
          dialogNegativeButton, dialogPositiveButton, dialogTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
