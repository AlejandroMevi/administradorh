// Generated by view binder compiler. Do not edit!
package com.venturessoft.human.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textview.MaterialTextView;
import com.venturessoft.human.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentModalLogOutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnCancel;

  @NonNull
  public final MaterialButton btnLogOut;

  @NonNull
  public final MaterialTextView materialTextView2;

  @NonNull
  public final MaterialTextView materialTextView3;

  private FragmentModalLogOutBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnCancel, @NonNull MaterialButton btnLogOut,
      @NonNull MaterialTextView materialTextView2, @NonNull MaterialTextView materialTextView3) {
    this.rootView = rootView;
    this.btnCancel = btnCancel;
    this.btnLogOut = btnLogOut;
    this.materialTextView2 = materialTextView2;
    this.materialTextView3 = materialTextView3;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentModalLogOutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentModalLogOutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_modal_log_out, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentModalLogOutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_cancel;
      MaterialButton btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btn_logOut;
      MaterialButton btnLogOut = ViewBindings.findChildViewById(rootView, id);
      if (btnLogOut == null) {
        break missingId;
      }

      id = R.id.materialTextView2;
      MaterialTextView materialTextView2 = ViewBindings.findChildViewById(rootView, id);
      if (materialTextView2 == null) {
        break missingId;
      }

      id = R.id.materialTextView3;
      MaterialTextView materialTextView3 = ViewBindings.findChildViewById(rootView, id);
      if (materialTextView3 == null) {
        break missingId;
      }

      return new FragmentModalLogOutBinding((ConstraintLayout) rootView, btnCancel, btnLogOut,
          materialTextView2, materialTextView3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
