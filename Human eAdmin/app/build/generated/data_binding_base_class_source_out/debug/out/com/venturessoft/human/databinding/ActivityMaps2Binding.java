// Generated by view binder compiler. Do not edit!
package com.venturessoft.human.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.venturessoft.human.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMaps2Binding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button aceptarCoordenas;

  @NonNull
  public final Button btnBackCompanyDataA;

  @NonNull
  public final TextView charginlatlong;

  @NonNull
  public final EditText search;

  @NonNull
  public final Button searchbtn;

  private ActivityMaps2Binding(@NonNull FrameLayout rootView, @NonNull Button aceptarCoordenas,
      @NonNull Button btnBackCompanyDataA, @NonNull TextView charginlatlong,
      @NonNull EditText search, @NonNull Button searchbtn) {
    this.rootView = rootView;
    this.aceptarCoordenas = aceptarCoordenas;
    this.btnBackCompanyDataA = btnBackCompanyDataA;
    this.charginlatlong = charginlatlong;
    this.search = search;
    this.searchbtn = searchbtn;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMaps2Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMaps2Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_maps2, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMaps2Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.aceptarCoordenas;
      Button aceptarCoordenas = ViewBindings.findChildViewById(rootView, id);
      if (aceptarCoordenas == null) {
        break missingId;
      }

      id = R.id.btnBackCompanyDataA;
      Button btnBackCompanyDataA = ViewBindings.findChildViewById(rootView, id);
      if (btnBackCompanyDataA == null) {
        break missingId;
      }

      id = R.id.charginlatlong;
      TextView charginlatlong = ViewBindings.findChildViewById(rootView, id);
      if (charginlatlong == null) {
        break missingId;
      }

      id = R.id.search;
      EditText search = ViewBindings.findChildViewById(rootView, id);
      if (search == null) {
        break missingId;
      }

      id = R.id.searchbtn;
      Button searchbtn = ViewBindings.findChildViewById(rootView, id);
      if (searchbtn == null) {
        break missingId;
      }

      return new ActivityMaps2Binding((FrameLayout) rootView, aceptarCoordenas, btnBackCompanyDataA,
          charginlatlong, search, searchbtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
