// Generated by view binder compiler. Do not edit!
package com.venturessoft.human.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.venturessoft.human.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentEmployeeListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FloatingActionButton addEmployee;

  @NonNull
  public final Button btnBackMaintenance;

  @NonNull
  public final Button btnEditStatusEmployee;

  @NonNull
  public final Button btnGoToEditEmployee;

  @NonNull
  public final Button deleteEmployee;

  @NonNull
  public final TextInputEditText etFilter;

  @NonNull
  public final CardviewFreeTrailListBinding linearFreeTrial;

  @NonNull
  public final LinearLayoutCompat linearLayoutCompat4;

  @NonNull
  public final ViewLoadingNewBinding loadingAnimationListEmployee;

  @NonNull
  public final RecyclerView reciclerMaintenanceActive;

  @NonNull
  public final TextInputLayout searchTextField;

  private FragmentEmployeeListBinding(@NonNull ConstraintLayout rootView,
      @NonNull FloatingActionButton addEmployee, @NonNull Button btnBackMaintenance,
      @NonNull Button btnEditStatusEmployee, @NonNull Button btnGoToEditEmployee,
      @NonNull Button deleteEmployee, @NonNull TextInputEditText etFilter,
      @NonNull CardviewFreeTrailListBinding linearFreeTrial,
      @NonNull LinearLayoutCompat linearLayoutCompat4,
      @NonNull ViewLoadingNewBinding loadingAnimationListEmployee,
      @NonNull RecyclerView reciclerMaintenanceActive, @NonNull TextInputLayout searchTextField) {
    this.rootView = rootView;
    this.addEmployee = addEmployee;
    this.btnBackMaintenance = btnBackMaintenance;
    this.btnEditStatusEmployee = btnEditStatusEmployee;
    this.btnGoToEditEmployee = btnGoToEditEmployee;
    this.deleteEmployee = deleteEmployee;
    this.etFilter = etFilter;
    this.linearFreeTrial = linearFreeTrial;
    this.linearLayoutCompat4 = linearLayoutCompat4;
    this.loadingAnimationListEmployee = loadingAnimationListEmployee;
    this.reciclerMaintenanceActive = reciclerMaintenanceActive;
    this.searchTextField = searchTextField;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentEmployeeListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentEmployeeListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_employee_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentEmployeeListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addEmployee;
      FloatingActionButton addEmployee = ViewBindings.findChildViewById(rootView, id);
      if (addEmployee == null) {
        break missingId;
      }

      id = R.id.btnBackMaintenance;
      Button btnBackMaintenance = ViewBindings.findChildViewById(rootView, id);
      if (btnBackMaintenance == null) {
        break missingId;
      }

      id = R.id.btnEditStatusEmployee;
      Button btnEditStatusEmployee = ViewBindings.findChildViewById(rootView, id);
      if (btnEditStatusEmployee == null) {
        break missingId;
      }

      id = R.id.btnGoToEditEmployee;
      Button btnGoToEditEmployee = ViewBindings.findChildViewById(rootView, id);
      if (btnGoToEditEmployee == null) {
        break missingId;
      }

      id = R.id.deleteEmployee;
      Button deleteEmployee = ViewBindings.findChildViewById(rootView, id);
      if (deleteEmployee == null) {
        break missingId;
      }

      id = R.id.etFilter;
      TextInputEditText etFilter = ViewBindings.findChildViewById(rootView, id);
      if (etFilter == null) {
        break missingId;
      }

      id = R.id.linearFreeTrial;
      View linearFreeTrial = ViewBindings.findChildViewById(rootView, id);
      if (linearFreeTrial == null) {
        break missingId;
      }
      CardviewFreeTrailListBinding binding_linearFreeTrial = CardviewFreeTrailListBinding.bind(linearFreeTrial);

      id = R.id.linearLayoutCompat4;
      LinearLayoutCompat linearLayoutCompat4 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutCompat4 == null) {
        break missingId;
      }

      id = R.id.loadingAnimationListEmployee;
      View loadingAnimationListEmployee = ViewBindings.findChildViewById(rootView, id);
      if (loadingAnimationListEmployee == null) {
        break missingId;
      }
      ViewLoadingNewBinding binding_loadingAnimationListEmployee = ViewLoadingNewBinding.bind(loadingAnimationListEmployee);

      id = R.id.reciclerMaintenanceActive;
      RecyclerView reciclerMaintenanceActive = ViewBindings.findChildViewById(rootView, id);
      if (reciclerMaintenanceActive == null) {
        break missingId;
      }

      id = R.id.searchTextField;
      TextInputLayout searchTextField = ViewBindings.findChildViewById(rootView, id);
      if (searchTextField == null) {
        break missingId;
      }

      return new FragmentEmployeeListBinding((ConstraintLayout) rootView, addEmployee,
          btnBackMaintenance, btnEditStatusEmployee, btnGoToEditEmployee, deleteEmployee, etFilter,
          binding_linearFreeTrial, linearLayoutCompat4, binding_loadingAnimationListEmployee,
          reciclerMaintenanceActive, searchTextField);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
